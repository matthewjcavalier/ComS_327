Compliance:

  This current iteration of the dungeon project complies to the spec in that a
  monster file is able to be read in, parsed, and passed on to the main program
  which then prints out all of the descriptions. The program also will parse
  an object description file and do the same procedure.

  Notes:

      The program expects both a monster description file and an object description
      file to exist in the $HOME/.rlg327 directory, if one or both of the files are
      missing, the program will fail to execute properly.


Functions:

    parseObjectDescFile and parseMonsterDescFile (see fileReading.cpp)

        These two functions are where the files are parsed and the POCOs
        are built to describe monsters and objects.

    readDiceDesc (see fileReading.cpp)
    
        this function reads the parses the dice description that is on the current line

    getWordsOnLine (see fileReading.cpp)

        this function is used to read in multiple words that are in a line to store them
        in a vector
 
Data structures:
  
    rollUp (see desc.h)

        This is a POCO (plain old c++ object) that holds the data needed to roll up
        a stat using dice
    
    monsterDesc and objectDesc (see desc.h)
    
        These are POCOs that hold all of the info that will be parsed from the input
        files

File Names:
  
    desc.h            This file holds definitions of the parse objects, as well as
                      a two objects used to validate that a description has been
                      fully parsed

    fileReading.cpp   This source file is where the logic for parsing the
                      input files is
    
    fileReading.has   This is the header file for fileReading.cpp